
name: cargo
on:
  push:
    branches:
      main
  pull_request:

jobs:
  test:
    name: test-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: swlynch99/cargo-sweep-action@v1

      - name: cargo test
        run: |
          cargo test        \
            --all-features  \
            --locked
        shell: bash

  check-powerset:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: swlynch99/cargo-sweep-action@v1
      - uses: taiki-e/install-action@cargo-hack

      - name: check powerset
        run: |
          cargo hack --feature-powerset check --locked

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - uses: swlynch99/cargo-sweep-action@v1

      - name: rustfmt
        run: |
          cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - uses: swlynch99/cargo-sweep-action@v1
      - uses: taiki-e/install-action@v2
        with:
          tool: clippy-sarif,sarif-fmt,cargo-deduplicate-warnings

      - name: cargo clippy
        run: |
          cargo clippy --all-targets --all-features --message-format json \
            | cargo deduplicate-warnings \
            | clippy-sarif      \
            | tee clippy.sarif  \
            | sarif-fmt
        continue-on-error: true

      - uses: actions/upload-artifact@v4
        with:
          name: clippy-sarif
          path: clippy.sarif
          retention-days: 1

  clippy-upload:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - clippy
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: clippy-sarif
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: clippy.sarif

  check-success:
    name: verify all tests pass
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test
      - check-powerset
      - rustfmt
      - clippy

    steps:
      - name: fail if any dependencies failed
        if: contains(needs.*.result, 'failure')
        shell: bash
        run: exit 1
      - name: no-op
        run: echo "All checks passed!"
